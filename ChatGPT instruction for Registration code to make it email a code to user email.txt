Twillio/sendgrid

username: rankflv@yahoo.com
PW: yourAssisgrass3$


mail used to send HausbaumBiz@outlook.com
PW : lovemiro1$











Sure! Here is the complete code integrated together, including the necessary HTML, JavaScript, and Java backend.

1. HTML and JavaScript (registration.html)



<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Hausbaum Registration</title>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">

<style>
    body {
        background-color: #f8f9fa;
    }

    .container {
        margin-top: 50px;
    }

    .form-container {
        border: 1px solid #ccc;
        padding: 20px;
        border-radius: 5px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    h2 {
        color: #333;
        text-align: center;
        margin-bottom: 30px;
    }

    .image-container {
        padding: 20px;
        text-align: center;
    }

    .image-container img {
        max-width: 200px;
        height: auto;
    }

    .home-page-button {
        text-align: center;
        margin-top: 20px;
    }

    .custom-button {
        background-color: #f8f9fa;
        color: black;
        border: 0px solid #ccc;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 5px;
    }
</style>
</head>
<body>
<div class="container">
    <div class="home-page-button">
        <a href="homepage.html" class="custom-button">Home Page</a>
    </div>

    <div class="row">
        <div class="col-lg-4">
            <div class="image-container">
                <img src="hausbaumbiz.png" alt="Descriptive Alt Text" class="img-fluid">
            </div>
        </div>

        <div class="col-lg-4 offset-lg-4">
            <div class="form-container">
                <h2>Registration</h2>
                <p>Create an Account</p>
                <div class="form-group">
                    <label for="firstName">First Name</label>
                    <input type="text" id="firstName" class="form-control" required="">
                </div>

                <div class="form-group">
                    <label for="lastName">Last Name</label>
                    <input type="text" id="lastName" class="form-control" required="">
                </div>

                <div class="form-group">
                    <label for="zipCode">Zip Code</label>
                    <input type="text" id="zipCode" class="form-control" required="">
                </div>

                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="text" id="email" class="form-control" required="">
                    <span class="text-danger" id="emailError"></span>
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="text" id="password" class="form-control" required="">
                </div>

                <div class="form-group">
                    <label for="confirmPassword">Confirm Password</label>
                    <input type="text" id="confirmPassword" class="form-control" required="">
                </div>

                <div class="form-group" style="margin-right: 17%; text-align: right;">
                    <input type="button" class="btn btn-primary" value="Submit" onclick="sendVerificationCode()">
                    <a href="login.html" class="btn btn-default">Already have an account? Login</a>
                </div>

                <input type="hidden" id="verificationCode" value="">
            </div>
        </div>
    </div>
</div>

<script>
function sendVerificationCode() {
    var email = document.getElementById('email').value;
    if (!email) {
        document.getElementById('emailError').innerText = "Email is required.";
        return;
    }

    fetch('/api/sendCode', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams({ email: email })
    })
    .then(response => response.text())
    .then(result => {
        console.log(result);
        if (result === "Verification code sent.") {
            // Display popup for code entry
            var popupHtml = `
                <div id="codePopup" style="position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); display:flex; justify-content:center; align-items:center;">
                    <div style="background:white; padding:20px; border-radius:5px; text-align:center;">
                        <h3>Enter Verification Code</h3>
                        <input type="text" id="userCode" class="form-control" placeholder="6-digit code">
                        <span id="codeError" class="text-danger"></span><br>
                        <button class="btn btn-primary" onclick="verifyCode()">Verify</button>
                    </div>
                </div>
            `;
            document.body.insertAdjacentHTML('beforeend', popupHtml);
        } else {
            document.getElementById('emailError').innerText = result;
        }
    })
    .catch(error => console.error('Error:', error));
}

function verifyCode() {
    var userCode = document.getElementById('userCode').value;
    var actualCode = document.getElementById('verificationCode').value;

    if (userCode == actualCode) {
        document.getElementById('codePopup').remove();
        window.location.href = 'TellUs.html';
    } else {
        document.getElementById('codeError').innerText = "Invalid code. Please try again.";
    }
}
</script>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>




2. Java Backend (Spring Boot)
a. pom.xml


Add the SendGrid dependency to your Maven project:


<dependency>
    <groupId>com.sendgrid</groupId>
    <artifactId>sendgrid-java</artifactId>
    <version>4.8.0</version>
</dependency>



b. EmailSender.java
Create a class to handle sending emails using SendGrid:



import com.sendgrid.*;
import java.io.IOException;

public class EmailSender {
    private static final String SENDGRID_API_KEY = System.getenv("SENDGRID_API_KEY");

    public static void sendVerificationEmail(String toEmail, String code) throws IOException {
        Email from = new Email("your-email@example.com");
        String subject = "Your Verification Code";
        Email to = new Email(toEmail);
        Content content = new Content("text/plain", "Your verification code is: " + code);
        Mail mail = new Mail(from, subject, to, content);

        SendGrid sg = new SendGrid(SENDGRID_API_KEY);
        Request request = new Request();
        try {
            request.setMethod(Method.POST);
            request.setEndpoint("mail/send");
            request.setBody(mail.build());
            Response response = sg.api(request);
            System.out.println(response.getStatusCode());
            System.out.println(response.getBody());
            System.out.println(response.getHeaders());
        } catch (IOException ex) {
            throw ex;
        }
    }
}



c. RegistrationController.java
Create a Spring Boot controller to handle the email sending request:


import org.springframework.web.bind.annotation.*;
import java.io.IOException;

@RestController
@RequestMapping("/api")
public class RegistrationController {

    @PostMapping("/sendCode")
    public String sendCode(@RequestParam String email) {
        String code = generateVerificationCode();
        try {
            EmailSender.sendVerificationEmail(email, code);
            return "Verification code sent.";
        } catch (IOException e) {
            e.printStackTrace();
            return "Failed to send verification code.";
        }
    }

    private String generateVerificationCode() {
        return String.valueOf((int)((Math.random() * 900000) + 100000));
    }
}




3. Environment Configuration
Ensure your SendGrid API key is set in your environment:



echo "export SENDGRID_API_KEY='YOUR_API_KEY'" > sendgrid.env
echo "sendgrid.env" >> .gitignore
source ./sendgrid.env





Running the Application
Start your Spring Boot application.
Open registration.html in your browser and test the functionality by entering an email and clicking the submit button.
Check your email for the verification code.
Enter the code in the popup to verify and proceed to the TellUs.html page.
This setup integrates SendGrid email sending with your Java backend and registration HTML page, allowing for a seamless verification process.




